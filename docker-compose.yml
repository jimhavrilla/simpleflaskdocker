version: '3.5' # docker-compose version (actually important here)

services:
    elasticsearch: # Elasticsearch Instance
        container_name: elastic-search
        image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
        volumes: # Persist ES data in separate "esdata" volume, as it can get quite large
            - ./media/database/esdata:/usr/share/elasticsearch/data
            - ./elastic/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
        environment:
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms500m -Xmx500m" # good amount of set aside memory for ES for a small web server
            - discovery.type=single-node
        ports: # Expose Elasticsearch ports
            - "9200:9200"
    app: # flask app
        container_name: website_dev
        build: # builds in current folder as per usual
            context: .
        ports:
            - "5000:5004" # Expose flask port
        environment: # Set ENV vars
            - FLASK_APP=app.py
            - FLASK_DEBUG=1
            - NODE_ENV=local
            - ES_HOST=elasticsearch
        volumes: # Attach local book data directory
            - ./media/database:/media/database # again, depends on some big data
            - .:/code # this is a really neat hack, allows you to change the code in the folder, and have it directly affect the running container for quick dev changes
        depends_on: # makes sure that es is running first
            - elasticsearch
        ulimits: # so there are no crazy core dumps on the server from the app (optional)
            core:
               hard: 0
               soft: 0
    prod: # flask app
        container_name: website_production
        build: # builds in current folder as per usual
            context: .
        ports:
            - "5010:5004" # Expose flask port
        environment: # Set ENV vars
            - FLASK_APP=app.py
            - FLASK_DEBUG=1
            - NODE_ENV=local
            - ES_HOST=elasticsearch
        volumes: # Attach local book data directory
            - ./media/database:/media/database # again, depends on some big data
        depends_on: # makes sure that es is running first
            - elasticsearch
        ulimits: # so there are no crazy core dumps on the server from the app (optional)
            core:
                hard: 0
                soft: 0
